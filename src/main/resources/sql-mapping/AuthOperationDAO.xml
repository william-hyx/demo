<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.AuthOperationDAO">
  <resultMap id="BaseResultMap" type="com.example.demo.po.AuthOperation">
    <id column="operation_id" jdbcType="BIGINT" property="operationId" />
    <result column="operation_name" jdbcType="VARCHAR" property="operationName" />
    <result column="operation_type" jdbcType="VARCHAR" property="operationType" />
    <result column="operation_desc" jdbcType="VARCHAR" property="operationDesc" />
    <result column="operation_url" jdbcType="VARCHAR" property="operationUrl" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    operation_id, operation_name, operation_type, operation_desc, operation_url, parent_id, 
    status, create_by, create_time, update_by, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_operation
    where operation_id = #{operationId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from auth_operation
    where operation_id = #{operationId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.po.AuthOperation">
    insert into auth_operation (operation_id, operation_name, operation_type,
      operation_desc, operation_url, parent_id, 
      status, create_by, create_time,
      update_by, update_time)
    values (#{operationId,jdbcType=BIGINT}, #{operationName,jdbcType=VARCHAR}, #{operationType,jdbcType=VARCHAR}, 
      #{operationDesc,jdbcType=VARCHAR}, #{operationUrl,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{status,jdbcType=VARCHAR}, #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.po.AuthOperation">
    insert into auth_operation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operationId != null">
        operation_id,
      </if>
      <if test="operationName != null">
        operation_name,
      </if>
      <if test="operationType != null">
        operation_type,
      </if>
      <if test="operationDesc != null">
        operation_desc,
      </if>
      <if test="operationUrl != null">
        operation_url,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operationId != null">
        #{operationId,jdbcType=BIGINT},
      </if>
      <if test="operationName != null">
        #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="operationDesc != null">
        #{operationDesc,jdbcType=VARCHAR},
      </if>
      <if test="operationUrl != null">
        #{operationUrl,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.po.AuthOperation">
    update auth_operation
    <set>
      <if test="operationName != null">
        operation_name = #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        operation_type = #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="operationDesc != null">
        operation_desc = #{operationDesc,jdbcType=VARCHAR},
      </if>
      <if test="operationUrl != null">
        operation_url = #{operationUrl,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where operation_id = #{operationId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.po.AuthOperation">
    update auth_operation
    set operation_name = #{operationName,jdbcType=VARCHAR},
      operation_type = #{operationType,jdbcType=VARCHAR},
      operation_desc = #{operationDesc,jdbcType=VARCHAR},
      operation_url = #{operationUrl,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where operation_id = #{operationId,jdbcType=BIGINT}
  </update>
</mapper>